
code: javascript
[size=18pt][b]fwl[/b][/size]

[hr]
[size=15pt][b]ES6 module[/b][/size]

[hr]
[size=11pt][b]FWL (Function Web Language) is a javascript ES6 module code geneator. Is intended to write full featured documentation and generate html, markdown and bbcode.[/b][/size]
[hr]
Library to create documents in html, markdown and bbcode.



[size=11pt][b][i]function[/i] [b]fwl[/b][/b][/size]
Bind the library methods to the object
Argument: [b]obj[/b] [i]Object[/i]   Object to bind the methods to
Return: [i]undefined[/i] 



[size=11pt][b][i]property[/i] [b]obj.documentType[/b][/b][/size]
Specify what document to make
Values: "html","markdown","bbcode"



[size=11pt][b][i]method[/i] [b]obj.create[/b][/b][/size]
Print and return the generated code for the chosen document
Argument: [b](...s)[/b] [i]String[/i]   String/s to print
Return: [b]str[/b] [i]String[/i]   All the strings



[size=11pt][b][i]method[/i] [b]obj.html[/b][/b][/size]
Only add the string to generated html
Argument: [b]s[/b] [i]String[/i]   HTML code to include
Return: [b]s[/b] [i]String[/i]   Html code



[size=11pt][b][i]method[/i] [b]obj.title[/b][/b][/size]
Add title tag to generated html
Argument: [b]s[/b] [i]String[/i]   Document title
Return: [b]code[/b] [i]String[/i]   String between title tags (html)



[size=11pt][b][i]method[/i] [b]obj.text[/b][/b][/size]
Add text to the document
Argument: [b]s[/b] [i]String[/i]   Text to add.
Return: [b]s[/b] [i]String[/i]   Text code



[size=11pt][b][i]method[/i] [b]obj.p[/b][/b][/size]
Add text in a paragraph to the document
Argument: [b]s[/b] [i]String[/i]   Text to insert
Return: [b]s[/b] [i]String[/i]   Paragraph code



[size=11pt][b][i]method[/i] [b]obj.br[/b][/b][/size]
Add a linebreak
Argument: [b]s[/b] [i]String[/i]   Text to prepend the linebreak
Return: [b]s[/b] [i]String[/i]   Linebreak code



[size=11pt][b][i]method[/i] [b]obj.h1[/b][/b][/size]
Add text as h1
Argument: [b]s[/b] [i]String[/i]   Heading text
Return: [b]s[/b] [i]String[/i]   Heading code



[size=11pt][b][i]method[/i] [b]obj.h2[/b][/b][/size]
Add text as h2
Argument: [b]s[/b] [i]String[/i]   Heading text
Return: [b]s[/b] [i]String[/i]   Heading code



[size=11pt][b][i]method[/i] [b]obj.h3[/b][/b][/size]
Add text as h1
Argument: [b]s[/b] [i]String[/i]   Heading text
Return: [b]s[/b] [i]String[/i]   Heading code



[size=11pt][b][i]method[/i] [b]obj.h4[/b][/b][/size]
Add text as h1
Argument: [b]s[/b] [i]String[/i]   Heading text
Return: [b]s[/b] [i]String[/i]   Heading code



[size=11pt][b][i]method[/i] [b]obj.h5[/b][/b][/size]
Add text as h1
Argument: [b]s[/b] [i]String[/i]   Heading text
Return: [b]s[/b] [i]String[/i]   Heading code



[size=11pt][b][i]method[/i] [b]obj.h6[/b][/b][/size]
Add text as h1
Argument: [b]s[/b] [i]String[/i]   Heading text
Return: [b]s[/b] [i]String[/i]   Heading code



[size=11pt][b][i]method[/i] [b]obj.link[/b][/b][/size]
Create a clickable link
Argument: [b]s[/b] [i]String[/i]   Link text + space + url
Return: [b]s[/b] [i]String[/i]   Clickable link code



[size=11pt][b][i]method[/i] [b]obj.image[/b][/b][/size]
Create a image
Argument: [b]s[/b] [i]String[/i]   Alt text + space + url
Return: [b]s[/b] [i]String[/i]   Image code



[size=11pt][b][i]method[/i] [b]obj.code[/b][/b][/size]
Create a highlighted code block
Argument: [b]s[/b] [i]String[/i]   Code. First line is only the language name
Return: [b]s[/b] [i]String[/i]   Code block.



[size=11pt][b][i]method[/i] [b]obj.bold[/b][/b][/size]
Make text bold
Argument: [b]s[/b] [i]String[/i]   Text
Return: [b]s[/b] [i]String[/i]   Bold text



[size=11pt][b][i]method[/i] [b]obj.italic[/b][/b][/size]
Make text italic
Argument: [b]s[/b] [i]String[/i]   Text
Return: [b]s[/b] [i]String[/i]   Italized text



[size=11pt][b][i]method[/i] [b]obj.underline[/b][/b][/size]
Underline the text
Argument: [b]s[/b] [i]String[/i]   Text
Return: [b]s[/b] [i]String[/i]   Underlined text (markdown returns normal text)



[size=11pt][b][i]method[/i] [b]obj.list[/b][/b][/size]
Create a dotted list of items
Argument: [b]s[/b] [i]String[/i]   Comma separated list of items
Return: [b]s[/b] [i]String[/i]   List code



[size=11pt][b][i]method[/i] [b]obj.olist[/b][/b][/size]
Create a numeric list of items
Argument: [b]s[/b] [i]String[/i]   Comma separated list of items
Return: [b]s[/b] [i]String[/i]   List code



[size=11pt][b][i]method[/i] [b]obj.hr[/b][/b][/size]
Add a horizontal line separator
Argument: [b]()[/b]
Return: [b]s[/b] [i]String[/i]   Horizontal separator code



[size=11pt][b][i]method[/i] [b]obj.quote[/b][/b][/size]
Create a quoted block
Argument: [b]s[/b] [i]String[/i]   Text block
Return: [b]s[/b] [i]String[/i]   Quoted block



[size=11pt][b][i]method[/i] [b]obj.table[/b][/b][/size]
Create a table
Argument: [b]s[/b] [i]String[/i]   | separated list
Return: [b]s[/b] [i]String[/i]   Table code



[size=11pt][b][i]method[/i] [b]obj.style_tables[/b][/b][/size]
Add tables css if generating a html document
Argument: [b]()[/b]
Return: [b]s[/b] [i]String[/i]   CSS style code



[size=11pt][b][i]method[/i] [b]obj.style_default[/b][/b][/size]
Add document css if generating a html document
Argument: [b]()[/b]
Return: [b]s[/b] [i]String[/i]   CSS style code



[size=11pt][b][i]function[/i] [b]replaceAll[/b][/b][/size]
Replace all ocurrences of a string from the text
Argument: [b]str[/b] [i]String[/i]   Text to replace findings from
Argument: [b]pattern[/b] [i]String[/i]   Text (coverted to regular expression) to replace
Argument: [b]newStr[/b] [i]String[/i]   New text to replaced findings for
Return: [b]s[/b] [i]String[/i]   Text with all ocurrences replaced

